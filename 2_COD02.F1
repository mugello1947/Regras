Definir cursor Cur_R999ENT;
Definir cursor Cur_E001TNS;
Definir cursor Cur_E045PLA;
Definir alfa   aCmdSql;	
Definir alfa   aCodCcu;	
Definir alfa   aCodMod;
Definir alfa   aCodSer;	
Definir alfa   aCodSnf;	
Definir alfa   aCodTns;	
Definir alfa   aNomVar;	
Definir alfa   aQtdReg;	
Definir alfa   aRetSql;	
Definir alfa   aVarAux;
Definir alfa	 aAplCta;

nCodEmp =E440RAT.CodEmp;
nCodFil =E440RAT.CodFil;
nNumNfc =E440RAT.NumNfc;
nSeqIsc =E440RAT.SeqIsc;
nCodFor =E440RAT.CodFor;
aCodSnf =E440RAT.CodSnf;
aCodCcu =E440RAT.CodCcu;
aCodTns =E440RAT.TnsSer;
nCtaRed =E440RAT.CtaRed;
nUsuLog =CodUsu;
nVlrLct =0;
aAplCta = "P";

@ Duplicidade de valores nas notas de Frete com transação de serviço @
Definir Alfa VaTnspro;
VaTnspro = E440Rat.TnsPro;
Se (VaTnsPro = "1352U")
inicio
  VVlrBas1 = 0;
  Cancel(1);
Fim;

/* transação */
IntParaAlfa(nSeqIsc,aVarAux);
aCodMod = "COD02" + "-" + aVarAux;
aCmdSql = "VlrLiq + VlrIrf + VlrIns + VlrPit + VlrCrt + VlrCsl + VlrOur + VlrIss"; @ - VlrCor - VlrPis;@

/* iss retido */
Cur_E001TNS.SQL "Select CodEmp \
                   from E001TNS \
                  where CodEmp =:nCodEmp \
                    and CodTns =:aCodTns \
                    and CprIss ='-'";
Cur_E001TNS.AbrirCursor();
Se (Cur_E001TNS.NaoAchou)
    Inicio
      aCmdSql = "VlrLiq + VlrIrf + VlrIns + VlrPit + VlrCrt + VlrCsl + VlrOur"; @ - VlrCor - VlrPis;@
    Fim;
Cur_E001TNS.FecharCursor();

@ Busca Conta Patrimonial @
Cur_E045PLA.SQL "Select CodEmp \
                   from E045PLA \
                  where CodEmp =:nCodEmp \
                    and CtaRed =:nCtaRed \
                    and AplCta =:aAplCta";
Cur_E045PLA.AbrirCursor();
Se (Cur_E045PLA.Achou)
    Inicio
      aCmdSql = "VlrLiq + VlrIrf + VlrIns + VlrPit + VlrCrt + VlrCsl + VlrOur + VlrIss - (VlrCor + VlrPis)"; 
    Fim;
Cur_E045PLA.FecharCursor();

/* valor base */
IntParaAlfa(nCodEmp,aVarAux);
aCmdSql =aCmdSql + "   from E440ISC \
                      where CodEmp =" + aVarAux;
IntParaAlfa(nCodFil,aVarAux);
aCmdSql =aCmdSql + "    and CodFil =" + aVarAux;
IntParaAlfa(nCodFor,aVarAux);
aCmdSql =aCmdSql + "    and CodFor =" + aVarAux;
IntParaAlfa(nNumNfc,aVarAux);
aCmdSql =aCmdSql + "    and NumNfc =" + aVarAux;
aCmdSql =aCmdSql + "    and CodSnf ='" + aCodSnf + "'";
IntParaAlfa(nSeqIsc,aVarAux);
aCmdSql =aCmdSql + "    and SeqIsc =" + aVarAux;
SelecaoTabelas(aCmdSql,aRetSql,aVarAux);
AlfaParaInt(aRetSql,nVlrBas);

/* qtde rateios */
aCmdSql ="                 count(*)";
aCmdSql =aCmdSql + "  from E440RAT";
IntParaAlfa(nCodEmp,aVarAux);
aCmdSql =aCmdSql + " where CodEmp =" + aVarAux;
IntParaAlfa(nCodFil,aVarAux);
aCmdSql =aCmdSql + "   and CodFil =" + aVarAux;
IntParaAlfa(nCodFor,aVarAux);
aCmdSql =aCmdSql + "   and CodFor =" + aVarAux;
IntParaAlfa(nNumNfc,aVarAux);
aCmdSql =aCmdSql + "   and NumNfc =" + aVarAux;
aCmdSql =aCmdSql + "   and CodSnf ='" + aCodSnf + "'";
IntParaAlfa(nSeqIsc,aVarAux);
aCmdSql =aCmdSql + "   and SeqIsc =" + aVarAux + " \
                       and VlrRat <> 0";
SelecaoTabelas(aCmdSql,aRetSql,aVarAux);
AlfaParaInt(aRetSql,nQtdRat);

/* nota fiscal */
ConverteMascara(1,nCodEmp,aNomVar,"9[4]");
ConverteMascara(1,nCodFil,aVarAux,"9[4]");
aNomVar =aNomVar + aVarAux;
ConverteMascara(1,nCodFor,aVarAux,"9[9]");
aNomVar =aNomVar + aVarAux;
ConverteMascara(1,nNumNfc,aVarAux,"9[9]");
aNomVar =aNomVar + aVarAux + aCodSnf;

Se (nQtdRat >1)
    Inicio  
      /* recálculo valor rateado */
      nVlrLct  =((nVlrBas * E440RAT.PerCta)/100) * (E440RAT.PerRat/100);
      ArredondarValor(nVlrLct,2);

      /* controle valores rateados */
      Cur_R999ENT.SQL "Select ValNum, \
                              ValStr \
                         from R999ENT \
                        where CodUsu =:nUsuLog \
                          and CodMod =:aCodMod \
                          and NomVar =:aNomVar";
      Cur_R999ENT.AbrirCursor();
      Se (Cur_R999ENT.Achou)
          Inicio
            aVarAux =Cur_R999ENT.ValStr;
            AlfaParaInt(aVarAux,nQtdReg);

            /* último rateio */
            Se (nQtdReg +1 =nQtdRat)
                Inicio
                  nQtdReg++;
                  nVlrLct =nVlrBas - Cur_R999ENT.ValNum;
                  ExecSQL "update R999ENT \
                              set ValNum =0, \
                                  ValStr ='0' \
                            where CodUsu =:nUsuLog \
                              and CodMod =:aCodMod \
                              and NomVar =:aNomVar";
                Fim;

            /* acumular rateio */
            Se (nQtdReg <> nQtdRat)
                Inicio
                  nQtdReg++;
                  nVarAux =nVlrLct + Cur_R999ENT.ValNum;
                  IntParaAlfa(nQtdReg,aQtdReg);
                  ExecSQL "update R999ENT \
                              set ValNum =:nVarAux, \
                                  ValStr =:aQtdReg \
                            where CodUsu =:nUsuLog \
                              and CodMod =:aCodMod \
                              and NomVar =:aNomVar";
                Fim;
          Fim;
      Se (Cur_R999ENT.NaoAchou)
          ExecSQL "insert into R999ENT (CodUsu,CodMod,NomVar,ValSeq,TipVar,ValNum,ValStr) values \
                                       (:nUsuLog,:aCodMod,:aNomVar,1,0,:nVlrLct,'1')";
      Cur_R999ENT.FecharCursor();
    Fim;

Se (nQtdRat =1)
    Inicio
      nVlrLct =nVlrBas;
      ExecSQL "update R999ENT \
                  set ValNum =0, \
                      ValStr ='0' \
                where CodUsu =:nUsuLog \
                  and CodMod =:aCodMod \
                  and NomVar =:aNomVar";
    Fim;

vVlrBas1 =nVlrLct;

Se (nCodFor = 4695) @ Latina @
 VCtaDeb1 = 763; @ Serviço de Cobrança @

x=1;
