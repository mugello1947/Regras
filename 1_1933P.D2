vAbgFil2 = E440RAT.CODFIL;
vDatBas2 = E440NFC.DATENT;
vCtaDeb2 = E440RAT.CTARED;
vCtaCre2 = 0;
vVlrBas2 = 0;
vCodHpd2 = 43;
Definir Alfa vObsCpl2S[200]; vObsCpl2S = "";
vCgcCpf2 = 0;
vCgcCre2 = 0;
vCodMoe2 = 0;
vCplBas21 = E440RAT.NUMNFC;
Definir Alfa vCplBas22S[200]; vCplBas22S = E095FOR.NOMFOR;
/* REGRA_PARCIAL */
Definir Cursor Cur_E440Isc;
Definir Cursor Cur_E440Nfc;
Definir Numero gCodEmp;
Definir Numero gCodFil;
Definir Numero gCodFor;
Definir Numero gNumNfc;
Definir Alfa gCodSnf;
Definir numero gSeqIsc;
Definir Numero gCtaRed;

gCodEmp = E440Rat.CodEmp;
gCodFil = E440Rat.CodFil;
gCodFor = E440Rat.CodFor;
gNumNfc = E440Rat.NumNfc;
gCodSnf = E440Rat.CodSnf;
gSeqIsc = E440Rat.SeqIsc;
gPerCta = E440Rat.PerCta;
gPerRat = E440Rat.PerRat;
gCtaRed = E440Rat.CtaRed;

xVlrBruNf = 0;
xVlrPisNf = 0;
xVlrCorNf = 0;
xVlrIssNf = 0;

Cur_E440Nfc.Sql "Select vlrbru, vlrpis, vlrcor, vlriss \
                   From E440Isc \
                  Where CodEmp=:gCodEmp \
                    And CodFil=:gCodFil \
                    And CodFor=:gCodFor \
                    And NumNfc=:gNumNfc \
                    And CodSnf=:gCodSnf ";
Cur_E440Nfc.AbrirCursor();
Enquanto (Cur_E440Nfc.Achou) {
   xVlrBruNf = xVlrBruNf + Cur_E440Nfc.VlrBru;
   xVlrPisNf = xVlrPisNf + Cur_E440Nfc.VlrPis;
   xVlrCorNf = xVlrCorNf + Cur_E440Nfc.VlrCor;
   xVlrIssNf = xVlrIssNf + Cur_E440Nfc.VlrIss;
   Cur_E440Nfc.Proximo();
}
Cur_E440Nfc.FecharCursor();

Cur_E440Isc.Sql "Select vlrbru, vlrpis, vlrcor, vlriss \
                   From E440Isc \
                  Where CodEmp=:gCodEmp \
                    And CodFil=:gCodFil \
                    And CodFor=:gCodFor \
                    And NumNfc=:gNumNfc \
                    And CodSnf=:gCodSnf \
                    And SeqIsc=:gSeqIsc";
Cur_E440Isc.AbrirCursor();
Se (Cur_E440Isc.Achou)
   Inicio
   xVlrBru = Cur_E440ISC.VlrBru;
   xVlrPis = Cur_E440ISC.VlrPis;
   xVlrCor = Cur_E440ISC.VlrCor;
   xVlrIss = Cur_E440ISC.VlrIss;
   Fim;
Cur_E440Isc.FecharCursor();

@ Valor Bruto Proprocional ao Rateio @
xVlrBruRat = xVlrBru * gPerCta / 100;
xVlrBruRat = xVlrBruRat * gPerRat / 100;

@ Valor PIS Proporcional ao Rateio @
xVlrPisRat = xVlrPis * gPerCta / 100;
xVlrPisRat = xVlrPisRat * gPerRat / 100;

@ Valor COFINS Proporcional ao Rateio @
xVlrCorRat = xVlrCor * gPerCta / 100;
xVlrCorRat = xVlrCorRat * gPerRat / 100;

@ Valor ISS Proporcional ao Rateio @
xVlrIssRat = xVlrIss * gPerCta / 100;
xVlrIssRat = xVlrIssRat * gPerRat / 100;

@ Valor do Lançamento Contábil Proporcional ao Rateio @
/*** VVlrBas2 = (xVlrBruRat - xVlrPisRat - xVlrCorRat) - xVlrIssRat;  ***/

VVlrBas2 = xVlrBruRat - xVlrPisRat - xVlrCorRat;
/*
Se (gCtaRed = 144)
 Inicio
  VVlrBas2 = xVlrBruRat;
 Fim; */
ArredondarValor(VVlrBas2, 2);


  Se ((GerTabNum[1] = gNumNfc) e (GerTabAlf[1] = gCodSnf) e (GerTabNum[2] = gCodFor)) {
     GerTabNum[1] = gNumNfc;
     GerTabAlf[1] = gCodSnf;
     GerTabNum[2] = gCodFor;
     GerTabNum[3] = GerTabNum[3] + VVlrBas2;
  }
  Senao {
     GerTabNum[1] = gNumNfc;
     GerTabAlf[1] = gCodSnf;
     GerTabNum[2] = gCodFor;
     GerTabNum[3] = VVlrBas2;
  }

  /* Implementação da lógica abaixo, limpeza de variáveis - ARF 13/05/2016 - 2137 
  xVlrDif = 0; 
  xVlrDif = xVlrBruNf - xVlrPisNf - xVlrCorNf - GerTabNum[3];
  ArredondarValor(xVlrDif,2);
  Se (xVlrDif < 0.10) {
     VVlrBas2 = VVlrBas2 + xVlrDif;
     ArredondarValor(VVlrBas2,2);
  }*/ @ Tirado pois está dando erro ECC 09/06/2017@

x=1;
